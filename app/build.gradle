apply plugin: 'com.android.application'

def properties = loadLocalProperties();

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.example.app"
        minSdkVersion 15
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        release {
            if(!properties.getProperty("RELEASE_STORE_FILE", "").empty){
                storeFile file(properties.getProperty("RELEASE_STORE_FILE", ""))
            }
            storePassword properties.getProperty("RELEASE_STORE_PASSWORD", "")
            keyAlias properties.getProperty("RELEASE_KEY_ALIAS", "")
            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD", "")
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

private def loadLocalProperties() {
    Properties properties = new Properties()
    def localPropertiesFile = project.rootProject.file('local.properties');
    if(!localPropertiesFile.exists()){
        localPropertiesFile.createNewFile();
    }
    properties.load(localPropertiesFile.newDataInputStream())
    return properties
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
